language: cpp
os: linux
dist: xenial

compiler:
  - gcc

before_install:
  - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo apt-get update -qq
  - sudo apt-get install qtbase5-dev libqt5svg5-dev
  - sudo pip install gcovr

# the install step will take care of deploying a newer cmake version
install:
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.17/cmake-3.17.1-Linux-x86_64.tar.gz
  - tar -xvf cmake-3.17.1-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.17.1-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

before_script:
  # create a build folder for the out-of-source build
  - cd "$TRAVIS_BUILD_DIR"
  - mkdir -p build
  - mkdir -p build-cov
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release
  # configure coverage
  - cd "$TRAVIS_BUILD_DIR"
  - cd build-cov
  - cmake .. -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DTESTS_COV=ON

after_success:
  - cd "$TRAVIS_BUILD_DIR"
  - ls

script:
  - cd "$TRAVIS_BUILD_DIR"
  - cd build
  # once CMake has done its job we just build using make as usual
  - cmake --build . --target spacedisplay_gui
  - ls
  - cd "$TRAVIS_BUILD_DIR"
  - cd build-cov
  - cmake --build . --target coverage_xml
  - ls
  - bash <(curl -s https://codecov.io/bash) -X gcov -f "coverage_xml.xml" || echo "Codecov did not collect coverage reports"
